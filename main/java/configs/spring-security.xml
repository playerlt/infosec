<?xml version="1.0" encoding="UTF8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans"
			 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

<!-- 学习spring security，实现具有角色的访问控制，并在这里实现配置 -->

	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/users" access="hasRole('ROLE_ADMIN')"  />
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')"  />

<!--		<form-login-->
<!--					authentication-success-handler-ref="myAuthenticationSuccessHandler"/>-->
		<logout/>
	</http>

	<beans:bean id="myAuthenticationSuccessHandler"
				class="com.index.security.MySimpleUrlAuthenticationSuccessHandler" />

	<authentication-manager>
		<authentication-provider>
<!--			<user-service>-->
<!--				<user name="mulan" password="$2a$10$LV6PehKTueoTTADWMtGJV.m5T8jCnPr.8NEVI5f37eoHll3zfC5Qq" authorities="ROLE_USER" />-->
<!--				<user name="mic" password="$2a$10$LV6PehKTueoTTADWMtGJV.m5T8jCnPr.8NEVI5f37eoHll3zfC5Qq" authorities="ROLE_ADMIN" />-->
<!--			</user-service>-->
			<jdbc-user-service data-source-ref="dataSource"
					users-by-username-query="select username,password,enabled from user where username = ?"
					authorities-by-username-query="select username, rolecode as role from user where username = ?"/>

			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="passwordEncoder"/>

</beans:beans>